{
  "name": "darkswap",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "hardhat test",
    "compile": "hardhat compile",
    "build": "tsc",
    "build:watch": "tsc --watch",
    "deploy:verifier": "hardhat ignition deploy ignition/modules/Groth16Verifier.ts --network hardhat",
    "deploy:zk-predicate": "hardhat ignition deploy ignition/modules/HiddenParamPredicateZK.ts --network hardhat",
    "test:verifier-deploy": "npm run compile && npm run deploy:verifier",
          "test:zk-predicate-basic": "npm run compile && npm run deploy:zk-predicate",
      "test:proof-decoding": "npx hardhat test test/HiddenParamPredicateZK.test.ts --grep 'Basic Structure'",
    "test:proof-roundtrip": "npx hardhat test test/ZKPredicateIntegration.test.ts --grep 'Constraint Validation'",
    "test:zk-predicate": "npx hardhat test test/HiddenParamPredicateZK.test.ts test/ZKPredicateIntegration.test.ts",
    "test:zk-integration": "npx hardhat test test/ZKPredicateIntegration.test.ts",
    "test:zk-edge-cases": "npx hardhat test test/ZKPredicateIntegration.test.ts --grep 'Edge Cases'",
    "test:gas-benchmarks": "npx hardhat test test/GasBenchmarks.test.ts",
    "test:gas-optimization": "npx hardhat test test/GasBenchmarks.test.ts --grep 'Performance Comparison'",
    "test:production-utils": "npx hardhat test test/GasBenchmarks.test.ts --grep 'Production Utility'",
    "test:commitment-utils": "npx hardhat test test/CommitmentUtils.test.ts",
    "test:commitment-validate": "npx hardhat test test/CommitmentUtils.test.ts --grep 'Validation'",
    "test:salt-packing": "npx hardhat test test/SaltPacking.test.ts",
    "test:salt-integration": "npx hardhat test test/SaltPacking.test.ts --grep 'Integration'",
    "test:zk-extension-build": "npx hardhat test test/ZKExtensionBuilder.test.ts",
    "test:extension-integration": "npx hardhat test test/ZKExtensionBuilder.test.ts --grep 'Integration'",
    "test:zk-order-build": "npx hardhat test test/ZKOrderBuilder.test.ts",
    "test:order-integration": "npx hardhat test test/ZKOrderBuilder.test.ts --grep 'Integration'",
    "test:proof-generation": "node scripts/generateProof.js",
    "test:proof-format": "npm run test:proof-generation",
    "circuit:version": "circom --version && snarkjs --version",
    "circuit:help": "echo '\n=== ZK Circuit Commands ===\nnpm run circuit:version     - Check circom/snarkjs versions\nnpm run circuit:compile     - Compile circuits to .r1cs and .wasm\nnpm run circuit:setup       - Run trusted setup ceremony\nnpm run circuit:verify-setup - Verify trusted setup integrity\nnpm run circuit:generate-verifier - Generate Solidity verifier contract\nnpm run circuit:prove       - Generate proof for test inputs\nnpm run circuit:verify      - Verify proof\nnpm run circuit:info        - Show circuit statistics\n'",
    "circuit:compile": "cd circuits && circom hidden_params.circom --r1cs --wasm -o . -l ../node_modules",
    "circuit:setup": "cd circuits && snarkjs powersoftau new bn128 12 pot12_0000.ptau && snarkjs powersoftau contribute pot12_0000.ptau pot12_0001.ptau --name='First contribution' -v && snarkjs powersoftau prepare phase2 pot12_0001.ptau pot12_final.ptau -v && snarkjs groth16 setup hidden_params.r1cs pot12_final.ptau hidden_params_0000.zkey && snarkjs zkey contribute hidden_params_0000.zkey hidden_params_0001.zkey --name='First contribution' -v && snarkjs zkey export verificationkey hidden_params_0001.zkey verification_key.json",
    "circuit:verify-setup": "cd circuits && snarkjs zkey verify hidden_params.r1cs pot12_final.ptau hidden_params_0001.zkey && echo '\nTrusted setup verification completed successfully!'",
    "circuit:generate-verifier": "cd circuits && snarkjs zkey export solidityverifier hidden_params_0001.zkey ../contracts/Groth16Verifier.sol && echo '\nâœ… Solidity verifier contract generated: contracts/Groth16Verifier.sol'",
    "circuit:info": "cd circuits && snarkjs r1cs info hidden_params.r1cs",
    "circuit:prove": "npm run test:proof-generation",
    "circuit:verify": "cd circuits && snarkjs groth16 verify verification_key.json public.json proof.json"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@nomicfoundation/hardhat-toolbox": "^6.1.0",
    "@openzeppelin/contracts": "^5.4.0",
    "circomlib": "^2.0.5",
    "dotenv": "^17.2.1",
    "hardhat": "^2.26.1",
    "snarkjs": "^0.7.5",
    "ts-node": "^10.0.0",
    "typescript": "^5.0.0"
  },
  "dependencies": {
    "poseidon-lite": "^0.3.0"
  }
}
